{"ast":null,"code":"import _slicedToArray from \"D:\\\\sellerdashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\sellerdashboard\\\\src\\\\views\\\\Users.js\";\nimport React from \"react\";\nimport { Container, Row, Col, Button, Card, CardBody } from \"shards-react\";\nimport { appConfig } from '../utils';\nimport Select from 'react-select';\nimport { UserDisplay } from '../components/users/UsersDisplay';\nvar useEffect = React.useEffect,\n    useState = React.useState;\nexport var Posts = function Posts(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      usertype = _useState2[0],\n      setUserType = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  var _useState5 = useState({\n    value: null,\n    label: null\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selected = _useState6[0],\n      setSelected = _useState6[1];\n\n  useEffect(function () {\n    var getuserRoles = appConfig.webApi + \"users/GetUserRole\";\n    fetch(getuserRoles, {\n      method: 'post',\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n      },\n      body: JSON.stringify(null)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (responseData) {\n      var options = [];\n      responseData.ObjUserRole.forEach(function (element) {\n        options.push({\n          value: element.role,\n          label: element.role\n        });\n      });\n      setUserType(options);\n    });\n  }, []);\n\n  var setUserTypeChange = function setUserTypeChange() {\n    handleSubmit();\n  };\n\n  var handleChange = function handleChange(selectedOption) {\n    setSelected(selectedOption);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    if (!selected.value) {\n      alert(\"Select User Type\");\n    } else {\n      // Get users based on selected user type\n      var postUrl = appConfig.webApi + \"users/GetUsers?usertype=\" + selected.value;\n      fetch(postUrl, {\n        method: 'post',\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify(null)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseData) {\n        setUsers(responseData);\n      });\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Card, {\n    small: true,\n    className: \"mb-4\",\n    style: {\n      marginTop: \"1%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    className: \"p-0 pb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Row, {\n    style: {\n      marginTop: \"1%\",\n      marginLeft: \"0.5%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: \"3\",\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Select, {\n    placeholder: \"Select User Type\",\n    value: selected,\n    onChange: handleChange,\n    options: usertype,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(Col, {\n    md: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Get Users\"))), React.createElement(\"table\", {\n    className: \"table mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    className: \"bg-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Phone Number\"), React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Change Role\"), React.createElement(\"th\", {\n    scope: \"col\",\n    className: \"border-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Status\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, users.map(function (u, index) {\n    return React.createElement(UserDisplay, {\n      user: u,\n      key: index,\n      setUserTypeChange: setUserTypeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    });\n  })))))))));\n};\nexport default Posts;","map":{"version":3,"sources":["D:/sellerdashboard/src/views/Users.js"],"names":["React","Container","Row","Col","Button","Card","CardBody","appConfig","Select","UserDisplay","useEffect","useState","Posts","props","usertype","setUserType","users","setUsers","value","label","selected","setSelected","getuserRoles","webApi","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","responseData","options","ObjUserRole","forEach","element","push","role","setUserTypeChange","handleSubmit","handleChange","selectedOption","alert","postUrl","marginTop","marginLeft","map","u","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    Container,\n    Row,\n    Col,\n     Button,\n    Card,\n    CardBody,\n  } from \"shards-react\";\nimport {appConfig} from '../utils'\nimport Select from 'react-select';\nimport {UserDisplay} from '../components/users/UsersDisplay';\nconst { useEffect, useState } = React;\n\nexport const Posts = (props) => {\n  const [usertype, setUserType] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [selected, setSelected] = useState({ value: null, label: null });\n  useEffect(() => {\n    const getuserRoles=appConfig.webApi+\"users/GetUserRole\";\n    fetch(getuserRoles, {\n    method: 'post',\n    headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      'Access-Control-Allow-Origin': '*'\n  },\n  body: JSON.stringify(null)\n}).then(function (response) {\n  return response.json();\n}).then(function (responseData) {\n    const options =[];\n    responseData.ObjUserRole.forEach(element => {\n        options.push( { value: element.role, label: element.role })\n    });\n    setUserType(options);\n});\n  }, []);\nconst setUserTypeChange =() =>{\n  handleSubmit();\n}\n  const handleChange = selectedOption => {\n   setSelected(selectedOption);\n  };\n  const handleSubmit = () =>{\n   if(!selected.value){\n       alert(\"Select User Type\");\n   }else{\n      // Get users based on selected user type\n      const postUrl=appConfig.webApi+\"users/GetUsers?usertype=\"+selected.value;\n      fetch(postUrl, {\n      method: 'post',\n      headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        'Access-Control-Allow-Origin': '*'\n    },\n    body: JSON.stringify(null)\n  }).then(function (response) {\n    return response.json();\n  }).then(function (responseData) {\n    setUsers(responseData);\n  });\n   }\n  }\n  return (\n    <>\n  <Container fluid className=\"main-content-container px-4\">\n    <Row>\n      <Col>\n        <Card small className=\"mb-4\" style={{marginTop:\"1%\"}}>\n          <CardBody className=\"p-0 pb-3\" >\n          <Row  style={{marginTop:\"1%\", marginLeft:\"0.5%\"}}>\n              <Col md=\"3\" className=\"form-group\">\n              <Select\n              placeholder ={\"Select User Type\"}\n             value={selected}\n            onChange={handleChange}\n            options={usertype}\n             />\n              </Col>\n              <Col md=\"2\">\n              <Button type=\"submit\" onClick={handleSubmit}>Get Users</Button>\n              </Col>\n            </Row>\n            <table className=\"table mb-0\">\n              <thead className=\"bg-light\">\n                <tr>\n                  <th scope=\"col\" className=\"border-0\">\n                  Name\n                  </th>\n                  <th scope=\"col\" className=\"border-0\">\n                  Email\n                  </th>\n                  <th scope=\"col\" className=\"border-0\">\n                  Phone Number\n                  </th>\n                  <th scope=\"col\" className=\"border-0\">\n                    Change Role\n                  </th>\n                  <th scope=\"col\" className=\"border-0\">\n                   Status\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {users.map((u, index) => (\n                  <UserDisplay \n                  user ={u}\n                  key={index}\n                  setUserTypeChange = {setUserTypeChange}\n                  />\n                ))}\n              </tbody>\n            </table>\n          </CardBody>\n        </Card>\n      </Col>\n    </Row>\n</Container>\n</>\n);\n};\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}